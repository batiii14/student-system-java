/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package studentgradecalculator;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.sql.PreparedStatement;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
/**
 *
 * @author BATUN
 */
public class AddGrade extends javax.swing.JFrame {

    
    ArrayList<Grades> grades= Grades.gradesList;
    
     private DefaultTableModel tableModel;
     
     
       private Connection getConnection() throws SQLException {
     
          String url = "jdbc:mysql://localhost:3306/students?zeroDateTimeBehavior=CONVERT_TO_NULL"; // Replace "database_name" with your actual database name
    String username = "dbuser";
    String password = "dbuser";
    Connection connection = DriverManager.getConnection(url, username, password);
    return connection;
}
       
    public AddGrade() {
        Grades grade=new Grades(1, 1, 1, 80, 100, 50);
        Grades grade2=new Grades(2, 2, 2, 80, 100, 50);
        Grades grade3=new Grades(3, 3, 3, 80, 100, 50);
        grades.add(grade);
        grades.add(grade2);
        grades.add(grade3);
        initComponents();
        tableModel = new DefaultTableModel(
        new Object[][] {}, // Empty data for now
        new String[] {"Grade Id","Student Id","Course Id", "Midterm", "Homework", "Final","Letter Grade","Course Name"} // Column names
    );

    // Set the table model for the JTable
    jTable1.setModel(tableModel);

    // Call a method to populate the table with student information
    populateTable();
    
    jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
    
    public void valueChanged(ListSelectionEvent event) {
        // Call a method to populate the fields with the selected row's data
        populateFieldsFromSelectedRow();
    }
});
    }
    
  private void populateTable() {
    // Clear existing data from the table
    tableModel.setRowCount(0);

    try {
        Connection connection=getConnection();
        String query = "SELECT g.grd_id, g.std_no, g.crs_id, g.grd_hw, g.grd_mt, g.grd_final,c.crs_name " +
                       "FROM grades g " +
                       "JOIN course c ON g.crs_id = c.crs_id";

        try (PreparedStatement pstmt = connection.prepareStatement(query)) {
            ResultSet rs = pstmt.executeQuery();

            // Iterate over the result set and add each grade's information to the table
            while (rs.next()) {
                int grdId = rs.getInt("grd_id");
                int stdId = rs.getInt("std_no");
                int crsId = rs.getInt("crs_id");
                float hw = rs.getFloat("grd_hw");
                float mt = rs.getFloat("grd_mt");
                float fnl = rs.getFloat("grd_final");
                
                
                 Grades.calculateLetterGrade(hw, mt, fnl);
                 String lgrade = Grades._grd_lgrade;
                String crsName = rs.getString("crs_name");

                Object[] rowData = {grdId, stdId, crsId, hw, mt, fnl, lgrade, crsName};
                tableModel.addRow(rowData);
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
}



      
      

    
     private void populateFieldsFromSelectedRow() {
    int selectedRowIndex = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex >= 0) {
        // Retrieve the data from the selected row
        int grdId = (int) jTable1.getValueAt(selectedRowIndex, 0);
        int stdId = (int) jTable1.getValueAt(selectedRowIndex, 1);
        int crsId = (int) jTable1.getValueAt(selectedRowIndex, 2);
        float mt = (float) jTable1.getValueAt(selectedRowIndex, 3);
        float hw = (float) jTable1.getValueAt(selectedRowIndex, 4);
        float fnl = (float) jTable1.getValueAt(selectedRowIndex, 5);

        // Set the retrieved data to the corresponding text fields
        gradeId.setText(String.valueOf(grdId));
        studentId.setText(String.valueOf(stdId));
        courseId.setText(String.valueOf(crsId));
        homework.setText(String.valueOf(hw));
        midterm.setText(String.valueOf(mt));
        finl.setText(String.valueOf(fnl));
       
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        gradeId = new javax.swing.JTextField();
        studentId = new javax.swing.JTextField();
        courseId = new javax.swing.JTextField();
        midterm = new javax.swing.JTextField();
        homework = new javax.swing.JTextField();
        finl = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Grade Id:");

        jLabel2.setText("Student Id:");

        jLabel3.setText("Course Id:");

        jLabel4.setText("Midterm: ");

        jLabel5.setText("Homework:");

        jLabel6.setText("Final:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gradeId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studentId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(midterm, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(homework, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finl, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(gradeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(studentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(courseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(midterm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(homework, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(finl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
           int crsId = Integer.parseInt(courseId.getText().trim());
    int stdId = Integer.parseInt(studentId.getText().trim());
    int grdId = Integer.parseInt(gradeId.getText().trim());
    float hw = Float.parseFloat(homework.getText().trim());
    float mt = Float.parseFloat(midterm.getText().trim());
    float fnl = Float.parseFloat(finl.getText().trim());
        
        
    // Assuming your database table is named "grades" and the column names match the structure you provided
    String insertQuery = "INSERT INTO grades (grd_id, std_no, crs_id, grd_mt, grd_hw, grd_final) VALUES (?, ?, ?, ?, ?, ?)";
    try {
        Connection connection = getConnection();
    
        PreparedStatement pstmt = connection.prepareStatement(insertQuery); 
        pstmt.setInt(1, grdId);
        pstmt.setInt(2, stdId);
        pstmt.setInt(3, crsId);
        pstmt.setFloat(4, mt);
        pstmt.setFloat(5, hw);
        pstmt.setFloat(6, fnl);
        pstmt.executeUpdate();
    } catch (SQLException e) {
        e.printStackTrace();
    }

    populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       int grdId = Integer.parseInt(gradeId.getText().trim());
    deleteGrade(grdId);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        int crsId = Integer.parseInt(courseId.getText().trim());
    int stdId = Integer.parseInt(studentId.getText().trim());
    int grdId = Integer.parseInt(gradeId.getText().trim());
    float hw = Float.parseFloat(homework.getText().trim());
    float mt = Float.parseFloat(midterm.getText().trim());
    float fnl = Float.parseFloat(finl.getText().trim());

    updateGrade(grdId, stdId, crsId, mt, hw, fnl);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddGrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddGrade().setVisible(true);
            }
        });
    }
    
    
    private void deleteGrade(int gradeId) {
    String deleteQuery = "DELETE FROM grades WHERE grd_id = ?";
    try (Connection connection = getConnection();
         PreparedStatement pstmt = connection.prepareStatement(deleteQuery)) {
        pstmt.setInt(1, gradeId);
        pstmt.executeUpdate();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    populateTable();
}

private void updateGrade(int gradeId, int studentId, int courseId, float midterm, float homework, float finalGrade) {
    String updateQuery = "UPDATE grades SET std_no = ?, crs_id = ?, grd_mt = ?, grd_hw = ?, grd_final = ? WHERE grd_id = ?";
    try (Connection connection = getConnection();
         PreparedStatement pstmt = connection.prepareStatement(updateQuery)) {
        pstmt.setInt(1, studentId);
        pstmt.setInt(2, courseId);
        pstmt.setFloat(3, homework);
        pstmt.setFloat(4, midterm);
        pstmt.setFloat(5, finalGrade);
        pstmt.setInt(6, gradeId);
        pstmt.executeUpdate();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    populateTable();
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField courseId;
    private javax.swing.JTextField finl;
    private javax.swing.JTextField gradeId;
    private javax.swing.JTextField homework;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField midterm;
    private javax.swing.JTextField studentId;
    // End of variables declaration//GEN-END:variables
}

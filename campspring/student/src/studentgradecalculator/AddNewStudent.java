package studentgradecalculator;
import java.util.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author BATUN
 */
public class AddNewStudent extends JFrame {
    
    ArrayList<Grades> grades;
    ArrayList<Student> students=Student.students;
    private DefaultTableModel tableModel;
    /**
     * Creates new form AddNewStudent
     */
    
    private Connection getConnection() throws SQLException {
     
          String url = "jdbc:mysql://localhost:3306/students?zeroDateTimeBehavior=CONVERT_TO_NULL"; // Replace "database_name" with your actual database name
    String username = "dbuser";
    String password = "dbuser";
    Connection connection = DriverManager.getConnection(url, username, password);
    return connection;
}

    public AddNewStudent() {
        
        Student st=new Student(1, "BATUN", "IDIKURT", "TURKEY");   
        Student st2=new Student(2, "Ouchahoe", "AKSA", "ZIMBABWE");      
        Student st3=new Student(3, "John", "WALKER", "USA");
        Student st4=new Student(4, "Philip", "MERKEL", "GERMANY");
        
        students.add(st);
        students.add(st2);
        students.add(st3);
        students.add(st4);
        
        initComponents();
        
        
    // Create the table model with column names
    tableModel = new DefaultTableModel(
        new Object[][] {}, // Empty data for now
        new String[] {"ID", "Name", "Last Name", "Nationality"} // Column names
    );

    // Set the table model for the JTable
    jTable1.setModel(tableModel);

    // Call a method to populate the table with student information
    populateTable();
    
    jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
    
    public void valueChanged(ListSelectionEvent event) {
        // Call a method to populate the fields with the selected row's data
        populateFieldsFromSelectedRow();
    }
});

    }
    
    private void populateFieldsFromSelectedRow() {
    int selectedRowIndex = jTable1.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex >= 0) {
        // Retrieve the data from the selected row
        int id = (int) jTable1.getValueAt(selectedRowIndex, 0);
        String name = (String) jTable1.getValueAt(selectedRowIndex, 1);
        String nationality = (String) jTable1.getValueAt(selectedRowIndex, 3);
        String lastName = (String) jTable1.getValueAt(selectedRowIndex, 2);

        // Set the retrieved data to the corresponding text fields
        studentId.setText(String.valueOf(id));
        stdName.setText(name);
        stdLname.setText(lastName);
        stdNat.setText(nationality);
    }
}

    
    
    
    
  private void populateTable() {
    // Clear existing data from the table
    tableModel.setRowCount(0);

    try {
        // Get a database connection
        Connection connection = getConnection();

        // Create a prepared statement to retrieve all students from the database
        String query = "SELECT * FROM student";
        PreparedStatement statement = connection.prepareStatement(query);

        // Execute the query and get the result set
        ResultSet resultSet = statement.executeQuery();

        // Iterate over the result set and add each student's information to the table
        while (resultSet.next()) {
            int id = resultSet.getInt("std_no");
            String name = resultSet.getString("std_name");
            String lastName = resultSet.getString("std_surname");
            String nationality = resultSet.getString("nationality");

            Object[] rowData = {id, name, lastName, nationality};
            tableModel.addRow(rowData);
        }

        // Close the result set, statement, and connection
        resultSet.close();
        statement.close();
        connection.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        studentId = new javax.swing.JTextField();
        stdName = new javax.swing.JTextField();
        stdLname = new javax.swing.JTextField();
        stdNat = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setText("Student Id");

        jLabel7.setText("Student Name");

        jLabel8.setText("Student Surname");

        jLabel9.setText("Student Nationality");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stdName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stdLname, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stdNat, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(145, 145, 145))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(38, 38, 38)
                        .addComponent(jButton2)
                        .addGap(36, 36, 36)
                        .addComponent(jButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(studentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(stdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(stdLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(stdNat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
       String stdId = studentId.getText().trim();
    String name = stdName.getText().trim();
    String lName = stdLname.getText().trim();
    String nationality = stdNat.getText().trim();

    try {
        // Get a database connection
        Connection connection = getConnection();

        // Create a prepared statement to insert a new student into the database
        String query = "INSERT INTO student (std_no, std_name, std_surname, nationality) VALUES (?, ?, ?, ?)";
        PreparedStatement statement = connection.prepareStatement(query);
        statement.setInt(1, Integer.parseInt(stdId));
        statement.setString(2, name);
        statement.setString(3, lName);
        statement.setString(4, nationality);

        // Execute the query
        statement.executeUpdate();

        // Close the statement and connection
        statement.close();
        connection.close();

        // Clear the input fields
        studentId.setText("");
        stdName.setText("");
        stdLname.setText("");
        stdNat.setText("");

        // Update the table
        populateTable();
    } catch (SQLException e) {
        e.printStackTrace();
    }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         String stdId = studentId.getText().trim();

    try {
        // Get a database connection
        Connection connection = getConnection();

        // Create a prepared statement to delete a student from the database
        String query = "DELETE FROM student WHERE std_no = ?";
        PreparedStatement statement = connection.prepareStatement(query);
        statement.setInt(1, Integer.parseInt(stdId));
              statement.executeUpdate();

        // Close the statement and connection
        statement.close();
        connection.close();

        // Clear the input field
        studentId.setText("");

        // Update the table
        populateTable();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     String stdId = studentId.getText().trim();
    int selectedRowIndex = jTable1.getSelectedRow();
    String name = stdName.getText().trim();
    String lName = stdLname.getText().trim();
    String nationality = stdNat.getText().trim();

    int id = (int) jTable1.getValueAt(selectedRowIndex, 0);
    Student st = null;
    for (Student student : students) {
        if (student.getStd_no() == id) {
            st = student;
        }
    }

    try {
        // Get a database connection
        Connection connection = getConnection();

        // Create a prepared statement to update a student in the database
        String query = "UPDATE student SET std_no = ?, std_name = ?, std_surname = ?, nationality = ? WHERE std_no = ?";
        PreparedStatement statement = connection.prepareStatement(query);
        statement.setInt(1, Integer.parseInt(stdId));
        statement.setString(2, name);
        statement.setString(3, lName);
        statement.setString(4, nationality);
        statement.setInt(5, id);

        // Execute the query
        statement.executeUpdate();

        // Close the statement and connection
        statement.close();
        connection.close();

        // Clear the input fields
        studentId.setText("");
        stdName.setText("");
        stdLname.setText("");
        stdNat.setText("");

        // Update the table
        populateTable();
    } catch (SQLException e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField stdLname;
    private javax.swing.JTextField stdName;
    private javax.swing.JTextField stdNat;
    private javax.swing.JTextField studentId;
    // End of variables declaration//GEN-END:variables
}
